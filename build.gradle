/*
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
import org.apache.tools.ant.filters.ReplaceTokens

// Run this Gradle build with 'gradle' to generate the various versions and variants from the template directory.
// Whenever a new version of XWiki is out, update this file to update the token values, run gradle and commit the
// result.
//
// Note: As a consequence only update the template files and never the generated files!

defaultTasks 'generate'

def variants = ['mysql-tomcat', 'postgres-tomcat']

// Note: To compute the sha256, download the XWiki WAR and issue:
// - Unix: sha256sum <binary name>
// - Mac: shasum --algorithm 256 <binary name>
// 

def tokens = [
    '10' : [
        xwikiVersion: '10.11.8',
        xwikiSha256: 'd3ac801e156966b1e5729a5251aa13662262460edcbf903ec8b5e5d98563bf7e',
        xwikisolrSha256: '0cce5266f3d9925cf09b041b1b4ea833332a0f6d9e90291e3c719f5866c52c0a',
        solrVersion: '7.5.0'
    ],
    '11': [
        xwikiVersion: '11.5',
        xwikiSha256: '4095548065fd32c6d7d90af9ae15e008207b5a144f5823b0bd8520d6a874bf3a',
        xwikisolrSha256: '216c46c11c41a1195cd23f2f568a70acdcdd731f1e179d7f1d4e93c40cacbcb1',
        solrVersion: '7.5.0'
    ]
]

task generate() {
    doLast {
        // Copy the template for all versions and variants
        tokens.keySet().each() { version ->
            variants.each() { variant ->
                // Extract the db type and add it as a token
                def (db, servlet) = variant.tokenize('-')
                tokens[version].'db' = db
                // Copy common template files, evaluating groovy in them
                copy {
                    from 'template'
                    into "${version}/${variant}"
                    include '.env'
                    include 'Dockerfile'
                    include 'docker-compose.yml'
                    include 'xwiki/*'
                    expand(tokens[version])
                    filteringCharset = 'UTF-8'
                }
                // Copy DB-specific template files, evaluating groovy in them
                copy {
                    from 'template'
                    into "${version}/${variant}"
                    include "${db}/*"
                    expand(tokens[version])
                    filteringCharset = 'UTF-8'
                }
                // Copy Servlet-specific template files, evaluating groovy in them
                copy {
                    from 'template'
                    into "${version}/${variant}"
                    include "${servlet}/*"
                    expand(tokens[version])
                    filteringCharset = 'UTF-8'
                }
            }
            tokens[version].'db' = "postgres"
            copy { 
                from 'template'
                into "${version}"
                include "solr/Dockerfile"
                include "solr/docker-compose.yml"
                expand(tokens[version])
                filteringCharset = 'UTF-8'
             }
             copy { 
                from 'template'
                into "${version}/solr"
                include ".env"
                expand(tokens[version])
                filteringCharset = 'UTF-8'
             }
            copy { 
                from 'template'
                into "${version}"
                include "solr/solr-init.sh"
                filteringCharset = 'UTF-8'
             }
        }
    }
}
